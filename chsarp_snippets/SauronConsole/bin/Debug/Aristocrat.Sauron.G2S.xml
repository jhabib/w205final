<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aristocrat.Sauron.G2S</name>
    </assembly>
    <members>
        <member name="T:Aristocrat.Sauron.G2S.BonusHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.BonusHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.BonusHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.BonusHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.BonusHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.BonusHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.BonusHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.BonusHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.CabinetHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.CabinetHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.CabinetHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.CabinetHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CabinetHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CabinetHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CabinetHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CabinetHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.CommunicationHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.CommunicationHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.CommunicationHandler"/> class.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.CommunicationHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CommunicationHandler.CommunicationsDevice">
            <summary>
            Gets the communications.
            </summary>
            <value>The communications.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CommunicationHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CommunicationHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.CoinAcceptorHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.CoinAcceptorHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.CoinAcceptorHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.CoinAcceptorHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CoinAcceptorHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CoinAcceptorHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CoinAcceptorHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.CoinAcceptorHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.Engine">
            <summary>
            A G2S engine.
            </summary>
            <seealso cref="T:Aristocrat.Sauron.IEngine" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.Engine.#ctor(System.Collections.Generic.IEnumerable{Aristocrat.Sauron.G2S.IHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.Engine"/> class.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.Engine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.Engine.Open">
            <summary>
            Opens engine communication.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.Engine.Close">
            <summary>
            Closes engine communication.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.Engine.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used and optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and unmanaged resources; <b>false</b> to release 
            only unmanaged resources.</param>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.Engine.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.Engine.Handlers">
            <summary>
            Gets the handlers.
            </summary>
            <value>The handlers.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.EventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.EventHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.EventHandler"/> class.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.EventHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.EventHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.EventHandler.EventHandlerDevice">
            <summary>
            Gets the event handler device.
            </summary>
            <value>The event handler device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.EventHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.GamePlayHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.GamePlayHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.GamePlayHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.GamePlayHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.GamePlayHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.GamePlayHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.GamePlayHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.GamePlayHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.HandpayHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HandpayHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.HandpayHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HandpayHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.HandpayHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.HandpayHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.HandpayHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.HandpayHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.HelperExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.GetDescriptor(Aristocrat.Sauron.G2S.ICommunication,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the descriptor.
            </summary>
            <param name="source">The source.</param>
            <param name="egmId">The EGM identifier.</param>
            <param name="deviceClass">The device class.</param>
            <param name="deviceId">The device identifier.</param>
            <param name="includeOwners">if set to <see langword="true" /> [include owners].</param>
            <param name="includeGuests">if set to <see langword="true" /> [include guests].</param>
            <param name="includeConfigs">if set to <see langword="true" /> [include configs].</param>
            <param name="includeOthers">if set to <see langword="true" /> [include others].</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.SetEventSubscription(Aristocrat.Sauron.G2S.IEventHandler,System.String,System.String,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets the event subscription.
            </summary>
            <param name="source">The source.</param>
            <param name="egmId">The EGM identifier.</param>
            <param name="deviceClass">The device class.</param>
            <param name="deviceId">The device identifier.</param>
            <param name="eventCode">The event code.</param>
            <param name="sendDeviceStatus">if set to <see langword="true" /> [send device status].</param>
            <param name="sendTransaction">if set to <see langword="true" /> [send transaction].</param>
            <param name="sendClassMeters">if set to <see langword="true" /> [send class meters].</param>
            <param name="sendDeviceMeters">if set to <see langword="true" /> [send device meters].</param>
            <param name="sendUpdatableMeters">if set to <see langword="true" /> [send updatable meters].</param>
            <param name="eventPersist">if set to <see langword="true" /> [event persist].</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.RegisterEventCallback(Aristocrat.Sauron.G2S.IEventHandler,System.String,System.Int32,System.String,Aristocrat.G2S.Devices.v21.EventCallback)">
            <summary>
            Registers the event callback.
            </summary>
            <param name="source">The source.</param>
            <param name="deviceClass">The device class.</param>
            <param name="deviceId">The device identifier.</param>
            <param name="eventCode">The event code.</param>
            <param name="callback">The callback.</param>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.UnregisterEventCallback(Aristocrat.Sauron.G2S.IEventHandler,Aristocrat.G2S.Devices.v21.EventCallback)">
            <summary>
            Unregisters the event callback.
            </summary>
            <param name="source">The source.</param>
            <param name="callback">The callback.</param>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.GetMeterInfo(Aristocrat.Sauron.G2S.IMeters,System.String,System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.getDeviceMeters},System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.getWagerMeters},System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.getGameDenomMeters},System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.getCurrencyMeters})">
            <summary>
            Gets the meter information.
            </summary>
            <param name="source">The source.</param>
            <param name="egmId">The EGM identifier.</param>
            <param name="deviceMeters">The device meters.</param>
            <param name="wagerMeters">The wager meters.</param>
            <param name="gameDenomMeters">The game denom meters.</param>
            <param name="currencyMeters">The currency meters.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.GetMeterInfo(Aristocrat.Sauron.G2S.IMeters,System.String,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Int32,System.Boolean}},System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Int32,System.Boolean}},System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Int32,System.Boolean}},System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.Int32,System.Boolean}})">
            <summary>
            Gets the meter information.
            </summary>
            <param name="source">The source.</param>
            <param name="egmId">The EGM identifier.</param>
            <param name="deviceMeters">The device meters.</param>
            <param name="wagerMeters">The wager meters.</param>
            <param name="gameDenomMeters">The game denom meters.</param>
            <param name="currencyMeters">The currency meters.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.ParseMeterInfo(Aristocrat.G2S.Protocol.v21.meterInfo,System.Int32)">
            <summary>
            Parses the meter information.
            </summary>
            <param name="source">The source.</param>
            <param name="deviceId">The device identifier.</param>
            <returns>The parsed meters.</returns>
            <exception cref="T:System.ArgumentNullException">@source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.ParseCurrencyMeterInfo(System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.currencyMeters},System.Int32)">
            <summary>
            Parses the currency meter information.
            </summary>
            <param name="source">The source.</param>
            <param name="deviceId">The device identifier.</param>
            <returns>The parsed meters.</returns>
            <exception cref="T:System.ArgumentNullException">@source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.ParseDeviceMeterInfo(System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.deviceMeters},System.Int32)">
            <summary>
            Parses the device meter information.
            </summary>
            <param name="source">The source.</param>
            <param name="deviceId">The device identifier.</param>
            <returns>The parsed meters.</returns>
            <exception cref="T:System.ArgumentNullException">@source</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.HelperExtensions.ParseGameDenomMeterInfo(System.Collections.Generic.IEnumerable{Aristocrat.G2S.Protocol.v21.gameDenomMeters},System.Int32)">
            <summary>
            Parses the game denom meter information.
            </summary>
            <param name="source">The source.</param>
            <param name="deviceId">The device identifier.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">@source</exception>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.IEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.IEventHandler.EventHandlerDevice">
            <summary>
            Gets the event handler device.
            </summary>
            <value>The event handler device.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.IMeters">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.IMeters.MetersDevice">
            <summary>
            Gets the meters device.
            </summary>
            <value>The meters device.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.NoteAcceptorHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.NoteAcceptorHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.NoteAcceptorHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.NoteAcceptorHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteAcceptorHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteAcceptorHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteAcceptorHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteAcceptorHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.NoteDispenserHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.NoteDispenserHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.NoteDispenserHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.NoteDispenserHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteDispenserHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteDispenserHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteDispenserHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.NoteDispenserHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.PlayerHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.PlayerHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.PlayerHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.PlayerHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.PlayerHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.PlayerHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.PlayerHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.PlayerHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.ProgressiveHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.ProgressiveHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.ProgressiveHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.ProgressiveHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.ProgressiveHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.ProgressiveHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.ProgressiveHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.ProgressiveHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.PublisherExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.PublisherExtensions.PublishEvent(Aristocrat.Sauron.IPublisher,System.String,Aristocrat.G2S.Protocol.v21.eventReport)">
            <summary>
            Publishes the specified EGM identifier.
            </summary>
            <param name="publisher">The publisher.</param>
            <param name="egmId">The EGM identifier.</param>
            <param name="event">The event.</param>
            <exception cref="T:System.ArgumentNullException">publisher, egmId, or event is null.</exception>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.PublisherExtensions.PublishProfile(Aristocrat.Sauron.IPublisher,System.String,System.String,Aristocrat.G2S.Protocol.v21.c_baseClass)">
            <summary>
            Publishes the specified profile.
            </summary>
            <param name="publisher">The publisher.</param>
            <param name="egmId">The EGM identifier.</param>
            <param name="deviceClass">The device class.</param>
            <param name="profile">The profile.</param>
            <exception cref="T:System.ArgumentNullException">publisher, egmId, deviceClass, or eventprofile is null.</exception>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.VoucherHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.VoucherHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.VoucherHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.VoucherHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.VoucherHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.VoucherHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.VoucherHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.VoucherHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.WatHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.WatHandler.#ctor(Aristocrat.Sauron.G2S.IEventHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.WatHandler" /> class.
            </summary>
            <param name="eventHandler">The event handler.</param>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.WatHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.WatHandler.Communication">
            <summary>
            Gets or sets the communication object.
            </summary>
            <value>The communication.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.WatHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.WatHandler.EventHandler">
            <summary>
            Gets the event handler.
            </summary>
            <value>The event handler.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.WatHandler.Publisher">
            <summary>
            Gets or sets the publisher.
            </summary>
            <value>The publisher.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.WindsorInstaller">
            <summary>
            
            </summary>
            <seealso cref="T:Castle.MicroKernel.Registration.IWindsorInstaller" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.WindsorInstaller.Install(Castle.Windsor.IWindsorContainer,Castle.MicroKernel.SubSystems.Configuration.IConfigurationStore)">
            <summary>
              Performs the installation in the <see cref="T:Castle.Windsor.IWindsorContainer" />.
            </summary>
            <param name="container">The container.</param>
            <param name="store">The configuration store.</param>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.ICommunication">
            <summary>
            
            </summary>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.ICommunication.CommunicationsDevice">
            <summary>
            Gets the communications device.
            </summary>
            <value>The communications device.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.IHandler">
            <summary>
            Interface for a G2S handler.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.IHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.IHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="T:Aristocrat.Sauron.G2S.MetersHandler">
            <summary>
            
            </summary>
            <seealso cref="T:Aristocrat.Sauron.G2S.IHandler" />
            <seealso cref="T:Aristocrat.Sauron.G2S.IMeters" />
        </member>
        <member name="M:Aristocrat.Sauron.G2S.MetersHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Aristocrat.Sauron.G2S.MeterHandler"/> class.
            </summary>
        </member>
        <member name="M:Aristocrat.Sauron.G2S.MetersHandler.Interrogate(System.String)">
            <summary>
            Interrogates the given EGM.
            </summary>
            <param name="egmId">The EGM identifier.</param>
            <returns>Return <b>true</b> if successful; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.MetersHandler.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="P:Aristocrat.Sauron.G2S.MetersHandler.MetersDevice">
            <summary>
            Gets the meters device.
            </summary>
            <value>The meters device.</value>
        </member>
    </members>
</doc>
